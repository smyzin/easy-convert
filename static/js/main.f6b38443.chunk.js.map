{"version":3,"sources":["layout/Layout.module.css","layout/Footer/Footer.module.css","components/Descriprion/Description.module.css","components/TextField/TextField.module.css","layout/Footer/Footer.tsx","layout/Layout.tsx","components/Descriprion/Description.tsx","components/TextField/TextField.tsx","utils/hepler.ts","utils/converter/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Footer","className","props","cn","styles","footer","footer__made","footer__copyright","format","Date","author","Layout","children","wrapper","body","Description","description","TextField","name","value","type","placeholder","setValue","useEffect","constructValue","currentText","replace","pHolder","length","toLowerCase","spellCheck","id","textarea","cols","rows","onChange","e","preventDefault","target","checkType","data","Array","isArray","constructor","Object","initConverting","initJSON","json","jsonString","text","test","JSON","parse","checkJsonString","list","exportTitle","reduce","acc","cur","key","res","ac","current","exportInterfaces","mapJSON","createInterfaceName","interfaceName","toUpperCase","slice","runByArray","array","complex","typeSet","Set","forEach","add","size","has","countNumberOfKeys","dType","from","join","arrayOfObjects","keyName","count","resultArray","Map","arrayToConcat","i","element","hasOwnProperty","push","set","ttt","get","delete","rootName","result","reRunThrough","require","WithLayout","Component","useState","valueJSON","setValueJson","valueTS","setValueTS","constructValueTS","constructValueJSON","jsonObj","ts","col_2m","title","onClick","stringify","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6b38443.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2XwcV\",\"header\":\"Layout_header__3BUr4\",\"sidebar\":\"Layout_sidebar__2eohI\",\"body\":\"Layout_body__zLRvd\",\"footer\":\"Layout_footer__9d8Mx\",\"col_2m\":\"Layout_col_2m__3-gog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Xx80\",\"footer__made\":\"Footer_footer__made__3zdMD\",\"footer__copyright\":\"Footer_footer__copyright__3h5qd\",\"author\":\"Footer_author__Xa_Rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__20Jup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"TextField_textarea__3aO28\",\"language-ts\":\"TextField_language-ts__EfW4V\"};","import cn from 'classnames';\r\nimport { format } from 'date-fns';\r\nimport { FooterProps } from './Footer.props';\r\nimport styles from './Footer.module.css';\r\n\r\nexport const Footer = ({ className, ...props }: FooterProps): JSX.Element => {\r\n\treturn (\r\n\t\t<footer className={cn(className, styles.footer)} {...props}>\r\n\t\t\t<div className={cn(styles.footer__made)}>Made with ❤️ and ☕️</div>\r\n\t\t\t<div className={cn(styles.footer__copyright)}>&copy; 2020 - {format(new Date(), 'yyyy')} Все права защищены</div>\r\n\t\t\t<div className={cn(styles.author)}>Created by Myzin Sergei {'<smyzin.work@gmail.com>'}</div>\r\n\t\t</footer>\r\n\t);\r\n};","import { FunctionComponent } from 'react';\r\nimport { LayoutProps } from './Layout.props';\r\nimport styles from './Layout.module.css';\r\nimport { Footer } from './Footer/Footer';\r\n\r\nconst Layout = ({ children, ...props }: LayoutProps): JSX.Element => {\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<div className={styles.body}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t<Footer className={styles.footer} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const WithLayout = <T extends Record<string, unknown>>(Component: FunctionComponent<T>) => {\r\n\treturn function WithLayoutComponent(props: T): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}","import styles from './Description.module.css';\r\n\r\nexport const Description = ({ ...props }): JSX.Element => {\r\n\treturn (\r\n\t\t<h1 className={styles.description}>\r\n\t\t\tInstantly generate JSON to TypeScript interfaces\r\n\t\t</h1>\r\n\t)\r\n}","import { ChangeEvent, useEffect } from 'react';\r\n\r\nimport { TextFieldProps } from './TextField.props';\r\nimport styles from './TextField.module.css';\r\n\r\nexport const TextField = ({ name, value = '', type, placeholder, setValue, ...props }: TextFieldProps): JSX.Element => {\r\n\tuseEffect(() => {\r\n\t\tconstructValue(value)\r\n\t\t// eslint-disable-next-line\r\n\t}, [value]);\r\n\r\n\tconst constructValue = (currentText: string) => {\r\n\t\tif (setValue) setValue(currentText.replace(/\\t/g, '  '))\r\n\t};\r\n\r\n\tconst onChange = function onTextChange(e: ChangeEvent<HTMLTextAreaElement>) {\r\n\t\te.preventDefault();\r\n\t\tconstructValue(e.target.value);\r\n\t};\r\n\r\n\r\n\tlet pHolder = placeholder ? placeholder : '';\r\n\tif (!pHolder.length) pHolder = type && type.toLowerCase() === 'json' ? 'Put here your JSON' : 'Get TS interfaces here';\r\n\r\n\treturn (\r\n\t\t<textarea\r\n\t\t\tspellCheck=\"false\"\r\n\t\t\tname={name}\r\n\t\t\tid={name}\r\n\t\t\tclassName={styles.textarea}\r\n\t\t\tcols={30}\r\n\t\t\trows={10}\r\n\t\t\tplaceholder={type === 'json' ? 'Put here your JSON' : 'Get TS interfaces here'}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t></textarea>\r\n\t)\r\n}","export function checkJsonString(jsonString: string): {} {\r\n\tconst regexpTest = /^[\\],:{}\\s]*$/;\r\n\tconst text = jsonString\r\n\t\t.replace(/\\\\[\"\\\\/bfnrtul]/g, '@')\r\n\t\t// eslint-disable-next-line\r\n\t\t.replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\r\n\t\t.replace(/(?:^|:|,)(?:\\s*\\[)+/g, '')\r\n\r\n\treturn regexpTest.test(text) ? JSON.parse(jsonString) : {};\r\n}\r\n\r\nexport function checkType(data: any): string {\r\n\tif (Array.isArray(data)) return 'array';\r\n\telse if (data && data.constructor === Object) return 'object';\r\n\telse if (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') return typeof data;\r\n\treturn 'any'\r\n}","import { checkJsonString, checkType } from '../hepler';\r\nimport { IResult, IObject, IComplexResult } from './converter.props';\r\n\r\nexport function initConverting(initJSON: string): string {\r\n\tconst json = checkJsonString(initJSON);\r\n\tconst type = checkType(json);\r\n\r\n\tconst mappedJSON = mapJSON(type === 'array' ? { data: json } : json);\r\n\treturn exportInterfaces(mappedJSON);\r\n}\r\n\r\nexport function createInterfaceName(name?: string): string {\r\n\tconst interfaceName = name && name.length > 0 ? name : 'root';\r\n\treturn 'I' + interfaceName[0].toUpperCase() + interfaceName.slice(1);\r\n}\r\n\r\nexport function exportInterfaces(list: IResult[]): string {\r\n\tconst exportTitle: string = 'export interface ';\r\n\treturn list.reduce((acc, cur) => {\r\n\t\treturn acc + exportTitle + cur.key + ' {\\n' + cur.res.reduce((ac: string, current: any) => {\r\n\t\t\treturn ac + '  ' + current[0] + ': ' + current[1] + ',\\n'\r\n\t\t}, '') + '}\\n\\n';\r\n\t}, '')\r\n}\r\n\r\nexport function runByArray(array: any[], key: string): IComplexResult {\r\n\tif (!array.length) return { res: 'any[]' };\r\n\r\n\tlet complex!: IResult[];\r\n\r\n\tlet typeSet = new Set();\r\n\tarray.forEach(value => {\r\n\t\tconst type = checkType(value);\r\n\t\ttypeSet.add(type === 'object' ? key : type)\r\n\t});\r\n\tif (typeSet.size > 2) return { res: 'any[]' };\r\n\tif (typeSet.size === 1 && typeSet.has(key)) complex = countNumberOfKeys(array, key);\r\n\tif (typeSet.size === 1 && typeSet.has('array')) complex = countNumberOfKeys(array, createInterfaceName(key));\r\n\r\n\tconst dType = Array.from(typeSet);\r\n\tconst res = typeSet.size > 1 ? `${dType.join('|')}[]` : `${dType.join('')}[]`;\r\n\treturn { res, complex: complex };\r\n}\r\n\r\nexport function countNumberOfKeys(arrayOfObjects: IObject[], keyName: string): IResult[] {\r\n\tlet count: { [index: string]: number } = {};\r\n\tconst size = arrayOfObjects.length;\r\n\tlet resultArray = new Map();\r\n\tlet arrayToConcat: IResult[] = []\r\n\tarrayOfObjects.forEach(element => {\r\n\t\tfor (let key in element) {\r\n\t\t\tconst type = checkType(element[key]);\r\n\t\t\tcount[key] = count.hasOwnProperty(key) ? count[key] + 1 : 1;\r\n\t\t\tif (!resultArray.has(key)) {\r\n\t\t\t\tif (type === 'array') {\r\n\t\t\t\t\tconst { res, complex } = runByArray(element[key], createInterfaceName(key));\r\n\r\n\t\t\t\t\tif (complex) arrayToConcat.push(...complex);\r\n\t\t\t\t\tresultArray.set(key, res);\r\n\t\t\t\t}\r\n\t\t\t\telse if (type === 'object') {\r\n\t\t\t\t\tconst ttt = mapJSON(element[key], key);\r\n\t\t\t\t\tresultArray.set(key, ttt[0].key);\r\n\t\t\t\t\tarrayToConcat.push(ttt[0])\r\n\t\t\t\t} else resultArray.set(key, type);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tfor (let i in count) {\r\n\t\tif (count[i] !== size) {\r\n\t\t\tresultArray.set(`${i}?`, resultArray.get(i));\r\n\t\t\tresultArray.delete(i);\r\n\t\t}\r\n\t}\r\n\r\n\treturn [{ key: keyName, res: Array.from(resultArray) }, ...arrayToConcat];\r\n}\r\n\r\nexport function mapJSON(json: IObject, rootName?: string): IResult[] {\r\n\tlet result = [];\r\n\tlet reRunThrough = [];\r\n\r\n\tfor (let key in json) {\r\n\t\tconst type = checkType(json[key]);\r\n\t\tswitch (type) {\r\n\t\t\tcase 'object':\r\n\t\t\t\tresult.push([key, createInterfaceName(key)]);\r\n\t\t\t\treRunThrough.push(...mapJSON(json[key], key));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'array':\r\n\t\t\t\tconst { res, complex } = runByArray(json[key], createInterfaceName(key));\r\n\t\t\t\tresult.push([key, res]);\r\n\t\t\t\tif (complex) reRunThrough.push(...complex);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'string':\r\n\t\t\tcase 'number':\r\n\t\t\tcase 'boolean':\r\n\t\t\t\tresult.push([key, type]);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tresult.push([key, 'any']);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn [{ key: createInterfaceName(rootName ? rootName : ''), res: result }, ...reRunThrough];\r\n}\r\n\r\n// @Todo: create function to check all interface's names for avoiding errors\r\n// @Todo: create closure function for creating Enums\r\nexport function createEnum() { }","import { MouseEvent, useEffect, useState } from 'react';\nimport { WithLayout } from './layout/Layout';\n\nimport styles from './layout/Layout.module.css';\nimport './styles/global.css';\n\nimport {\n\tDescription, TextField\n} from './components';\n\nimport { initConverting } from './utils/converter/index';\nconst json = require('./utils/test.json')\n\nfunction App(): JSX.Element {\n\tconst [valueJSON, setValueJson] = useState<string>('');\n\tconst [valueTS, setValueTS] = useState<string>('');\n\n\tuseEffect(() => {\n\t\tconstructValueTS(valueTS)\n\t}, [valueTS]);\n\n\tuseEffect(() => {\n\t\tconstructValueJSON(valueJSON)\n\t}, [valueJSON]);\n\n\tconst constructValueJSON = (jsonObj: string) => {\n\t\tif (setValueJson) setValueJson(jsonObj)\n\t}\n\n\tconst constructValueTS = (ts: string) => {\n\t\tif (setValueTS) setValueTS(ts)\n\t};\n\n\tconst clickConvert = function (e: MouseEvent) {\n\t\te.preventDefault();\n\n\t\tconst result = initConverting(valueJSON);\n\t\tconstructValueTS(result);\n\t}\n\n\tconst setTest = (e: MouseEvent) => {\n\t\te.preventDefault();\n\n\t\tconstructValueJSON(JSON.stringify(json, undefined, 2))\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t<Description />\n\t\t\t<div className={styles.col_2m}>\n\t\t\t\t<TextField\n\t\t\t\t\tname=\"json-field\"\n\t\t\t\t\ttype=\"json\"\n\t\t\t\t\tvalue={valueJSON}\n\t\t\t\t\tsetValue={setValueJson}\n\t\t\t\t></TextField>\n\t\t\t\t<button className=\"button round green-light button__mark\" title=\"Set test JSON\" onClick={setTest}>?</button>\n\t\t\t\t<button className=\"button primary button__submit\" onClick={clickConvert}>Convert</button>\n\t\t\t\t<TextField\n\t\t\t\t\tname=\"ts-field\"\n\t\t\t\t\ttype=\"ts\"\n\t\t\t\t\tvalue={valueTS}\n\t\t\t\t\tsetValue={setValueTS}\n\t\t\t\t></TextField>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default WithLayout(App)\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}